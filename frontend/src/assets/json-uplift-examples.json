[
  {
    "title": "JSON-LD uplift tutorial",
    "context": "# See https://opengeospatial.github.io/ogc-na-tools/tutorials/#how-to-create-a-json-ld-uplift-context-definition\n\ntransform:\n  - '[to_entries | .[] | {\"@id\": .key} + .value]'\n  - '[.[] | .author = {\"name\": .author}]'\n\ntypes:\n  '$..author': 'Person'\n\nbase: 'http://example.com/job/'\n\ncontext:\n  '$':\n    '@base': 'http://example.com/job/'\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#'\n    foaf: 'http://xmlns.com/foaf/0.1/'\n    dc: 'http://purl.org/dc/elements/1.1/'\n    statusvoc: 'http://example.com/status#'\n    label: 'rdfs:label'\n    author: 'dc:creator'\n    name: 'foaf:name'\n    Person: 'foaf:person'\n    status:\n      '@id': 'statusvoc:status'\n      '@type': '@vocab'\n      '@context':\n        '@vocab': 'http://example.com/status#'",
    "content": "{\n  \"job1\": {\n    \"label\": \"Develop software\",\n    \"author\": \"Doe, John\",\n    \"status\": \"done\"\n  },\n  \"job2\": {\n    \"label\": \"Deploy production version\",\n    \"author\": \"Smith, Jane\",\n    \"status\": \"in-progress\"\n  }\n}"
  },
  {
    "title": "OGC Bodies (sample)",
    "context": "transform:\n  # Detect DWG and SWG from name\n  - >-\n    [.[] | . + (\n      if .name | test(\"\\\\bDWG\\\\b\") \n        then {\"type\": \"policy:Dwg\"} \n        else (\n          if .name | test(\"\\\\bSWG\\\\b\")\n            then {\"type\": \"policy:Swg\"} \n            else {\"type\": \"policy:Body\"}\n          end)\n        end)]\n  # Create @id from id, add inScheme and alias label to name\n  - '[.[] | . + {\"@id\" : (\"bodies:\" + .id), \"inScheme\": \"http://www.opengis.net/def/entities/bodies\", \"label\": .name}]'\n\ntypes:\n  '$[*]':\n    - skos:Concept\n\ncontext:\n  '$':\n    bodies: 'http://www.opengis.net/def/entities/bodies/'\n    skos: 'http://www.w3.org/2004/02/skos/core#'\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#'\n    policy: 'http://www.opengis.net/def/metamodel/ogc-na/'\n    inScheme:\n      \"@id\": \"skos:inScheme\"\n      \"@type\": \"@id\"\n    name: skos:prefLabel\n    label: rdfs:label\n    type: \"@type\"\n",
    "content": "[\n  {\n    \"id\":\"673\",\n    \"name\":\"3D GeoVolumes SWG\",\n    \"abbv\":\"3DGeoVol SWG\",\n    \"fname\":\"Jeff\",\n    \"lname\":\"Harrison\",\n    \"org\":\"US Army Geospatial Center\",\n    \"status\":\"Active\"\n  },\n  {\n    \"id\":\"472\",\n    \"name\":\"Agriculture DWG\",\n    \"abbv\":\"Agriculture DWG\",\n    \"fname\":\"Joshua\",\n    \"lname\":\"Lieberman\",\n    \"org\":\"Harvard University\",\n    \"status\":\"Active\"\n  },\n  {\n    \"id\":\"131\",\n    \"name\":\"Architecture DWG\",\n    \"abbv\":\"Arch DWG\",\n    \"fname\":\"Gobe\",\n    \"lname\":\"Hobona\",\n    \"org\":\"Open Geospatial Consortium, Inc.\",\n    \"status\":\"Active\"\n  },\n  {\n    \"id\":\"615\",\n    \"name\":\"Artificial Intelligence in Geoinformatics DWG\",\n    \"abbv\":\"GeoAI DWG\",\n    \"fname\":\"Scott\",\n    \"lname\":\"Simmons\",\n    \"org\":\"Open Geospatial Consortium, Inc.\",\n    \"status\":\"Active\"\n  }\n]"
  },
  {
    "title": "OGC Bodies (full)",
    "context": "transform:\n  # Detect DWG and SWG from name\n  - >-\n    [.[] | . + (\n      if .name | test(\"\\\\bDWG\\\\b\") \n        then {\"type\": \"policy:Dwg\"} \n        else (\n          if .name | test(\"\\\\bSWG\\\\b\")\n            then {\"type\": \"policy:Swg\"} \n            else {\"type\": \"policy:Body\"}\n          end)\n        end)]\n  # Create @id from id, add inScheme and alias label to name\n  - '[.[] | . + {\"@id\" : (\"bodies:\" + .id), \"inScheme\": \"http://www.opengis.net/def/entities/bodies\", \"label\": .name}]'\n\ntypes:\n  '$[*]':\n    - skos:Concept\n\ncontext:\n  '$':\n    bodies: 'http://www.opengis.net/def/entities/bodies/'\n    skos: 'http://www.w3.org/2004/02/skos/core#'\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#'\n    policy: 'http://www.opengis.net/def/metamodel/ogc-na/'\n    inScheme:\n      \"@id\": \"skos:inScheme\"\n      \"@type\": \"@id\"\n    name: skos:prefLabel\n    label: rdfs:label\n    type: \"@type\"\n",
    "contentUrl": "https://portal.ogc.org/public_ogc/api/working_groups.php"
  },
  {
    "title": "Iliad Jellyfish observations",
    "context": "transform:\n  # Reformat dates according to ISO 8601\n  - '.[].value[] |= . + { \"phenomenonTime\": (.phenomenonTime | strptime(\"%m/%d/%Y\") | strftime(\"%F\")), \"resultTime\": (.resultTime | strptime(\"%m/%d/%Y\") | strftime(\"%F\")) }'\n\ntypes:\n  '$[*]': 'sosa:ObservationCollection'\n  '$[*].value[*]': 'sosa:Observation'\n  '$[*].value[*].result': sosa:Result\n\ncontext:\n  '$':\n    ssn: 'http://www.w3.org/ns/ssn/'\n    sosa: 'http://www.w3.org/ns/sosa/'\n    dct: 'http://purl.org/dc/terms/'\n    xsd: 'http://www.w3.org/2001/XMLSchema#'\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#'\n    oim-jf: 'http://w3id.org/iliad/oim/jellyfish#'\n    'FeatureOfInterest@iot.navigationLink':\n      '@id': sosa:hasFeatureOfInterest\n      '@type': '@id'\n    'Datastream@iot.navigationLink':\n      '@id': rdfs:seeAlso\n      '@type': '@id'\n    '@iot.selfLink': '@id'\n    '@iot.id': dct:identifier\n    value: sosa:hasMember\n    result: sosa:hasResult\n    phenomenonTime:\n      '@id': sosa:phenomenonTime\n      '@type': 'xsd:date'\n    resultTime:\n      '@id': sosa:resultTime\n      '@type': 'xsd:date'\n  '$[*].value[*].result':\n    '@vocab': oim-jf\n    wormsConcept:\n      '@type': '@id'\n    \n  ",
    "contentUrl": "https://w3id.org/iliad/jf/api/v1.0/Observations?%24top=100&%24skip=100"
  }
]